[
  {
    "objectID": "summarizing_student_data.html",
    "href": "summarizing_student_data.html",
    "title": "Summarizing Student Data",
    "section": "",
    "text": "library(conflicted)\nlibrary(tidyverse)\nconflicts_prefer(dplyr::filter())"
  },
  {
    "objectID": "summarizing_student_data.html#load-required-packages",
    "href": "summarizing_student_data.html#load-required-packages",
    "title": "Summarizing Student Data",
    "section": "",
    "text": "library(conflicted)\nlibrary(tidyverse)\nconflicts_prefer(dplyr::filter())"
  },
  {
    "objectID": "summarizing_student_data.html#task-1-read-in-data-and-modify",
    "href": "summarizing_student_data.html#task-1-read-in-data-and-modify",
    "title": "Summarizing Student Data",
    "section": "Task 1: Read in Data and Modify",
    "text": "Task 1: Read in Data and Modify\n\nMerge Version\nFirst, modify the code provided with the download to read in the data from a local file source (the downloaded .csv files) and combine the two data frames. Use local paths.\n\nd1 &lt;- read.table(\"student-mat.csv\",sep=\";\",header=TRUE)\nd2 &lt;- read.table(\"student-por.csv\",sep=\";\",header=TRUE)\n\nd3 &lt;- merge(d1,d2,by=c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\nprint(nrow(d3)) # 382 students\n\n[1] 382\n\n\n\n\nInner Join Version 1\nSecond, read in and combine the data using functions from the tidyverse. Use an inner_join() on the variables used in the UCI code. Make a note of any issues.\n\nd_one &lt;- read_delim(\"student-mat.csv\", delim = \";\")\n\nRows: 395 Columns: 33\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (17): school, sex, address, famsize, Pstatus, Mjob, Fjob, reason, guardi...\ndbl (16): age, Medu, Fedu, traveltime, studytime, failures, famrel, freetime...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nd_two &lt;- read_delim(\"student-por.csv\", delim = \";\")\n\nRows: 649 Columns: 33\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (17): school, sex, address, famsize, Pstatus, Mjob, Fjob, reason, guardi...\ndbl (16): age, Medu, Fedu, traveltime, studytime, failures, famrel, freetime...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nd_three &lt;- inner_join(d_one, d_two, by =\n                         c(\"school\",\n                           \"sex\",\n                           \"age\",\n                           \"address\",\n                           \"famsize\",\n                           \"Pstatus\",\n                           \"Medu\",\n                           \"Fedu\",\n                           \"Mjob\",\n                           \"Fjob\",\n                           \"reason\",\n                           \"nursery\",\n                           \"internet\")\n                      )\n\nWarning in inner_join(d_one, d_two, by = c(\"school\", \"sex\", \"age\", \"address\", : Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 79 of `x` matches multiple rows in `y`.\nℹ Row 79 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\nd_three\n\n# A tibble: 382 × 53\n   school sex     age address famsize Pstatus  Medu  Fedu Mjob     Fjob   reason\n   &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;  &lt;chr&gt; \n 1 GP     F        18 U       GT3     A           4     4 at_home  teach… course\n 2 GP     F        17 U       GT3     T           1     1 at_home  other  course\n 3 GP     F        15 U       LE3     T           1     1 at_home  other  other \n 4 GP     F        15 U       GT3     T           4     2 health   servi… home  \n 5 GP     F        16 U       GT3     T           3     3 other    other  home  \n 6 GP     M        16 U       LE3     T           4     3 services other  reput…\n 7 GP     M        16 U       LE3     T           2     2 other    other  home  \n 8 GP     F        17 U       GT3     A           4     4 other    teach… home  \n 9 GP     M        15 U       LE3     A           3     2 services other  home  \n10 GP     M        15 U       GT3     T           3     4 other    other  home  \n# ℹ 372 more rows\n# ℹ 42 more variables: guardian.x &lt;chr&gt;, traveltime.x &lt;dbl&gt;, studytime.x &lt;dbl&gt;,\n#   failures.x &lt;dbl&gt;, schoolsup.x &lt;chr&gt;, famsup.x &lt;chr&gt;, paid.x &lt;chr&gt;,\n#   activities.x &lt;chr&gt;, nursery &lt;chr&gt;, higher.x &lt;chr&gt;, internet &lt;chr&gt;,\n#   romantic.x &lt;chr&gt;, famrel.x &lt;dbl&gt;, freetime.x &lt;dbl&gt;, goout.x &lt;dbl&gt;,\n#   Dalc.x &lt;dbl&gt;, Walc.x &lt;dbl&gt;, health.x &lt;dbl&gt;, absences.x &lt;dbl&gt;, G1.x &lt;dbl&gt;,\n#   G2.x &lt;dbl&gt;, G3.x &lt;dbl&gt;, guardian.y &lt;chr&gt;, traveltime.y &lt;dbl&gt;, …\n\n\nIssue noted: the above code join creates duplicate x and y versions of several variables.\n\n\nInner Join Version 2\nUse an inner_join() on all variables other than G1, G2, G3, paid, and absences. Use this form of the combined data in further exercises.\n\nstudents_math &lt;- read_delim(\"student-mat.csv\", delim = \";\")\n\nRows: 395 Columns: 33\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (17): school, sex, address, famsize, Pstatus, Mjob, Fjob, reason, guardi...\ndbl (16): age, Medu, Fedu, traveltime, studytime, failures, famrel, freetime...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nstudents_port &lt;- read_delim(\"student-por.csv\", delim = \";\")\n\nRows: 649 Columns: 33\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (17): school, sex, address, famsize, Pstatus, Mjob, Fjob, reason, guardi...\ndbl (16): age, Medu, Fedu, traveltime, studytime, failures, famrel, freetime...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nexclude_cols &lt;- c(\"G1\", \"G2\", \"G3\", \"paid\", \"absences\")\n\nstudents &lt;- inner_join(students_math,\n                       students_port,\n                       by = colnames(students_math)[! colnames(students_math)%in% exclude_cols],\n                       suffix = c(\"_math\", \"_port\")\n                       )\nstudents\n\n# A tibble: 320 × 38\n   school sex     age address famsize Pstatus  Medu  Fedu Mjob     Fjob   reason\n   &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;  &lt;chr&gt; \n 1 GP     F        18 U       GT3     A           4     4 at_home  teach… course\n 2 GP     F        17 U       GT3     T           1     1 at_home  other  course\n 3 GP     F        15 U       GT3     T           4     2 health   servi… home  \n 4 GP     F        16 U       GT3     T           3     3 other    other  home  \n 5 GP     M        16 U       LE3     T           4     3 services other  reput…\n 6 GP     M        16 U       LE3     T           2     2 other    other  home  \n 7 GP     F        17 U       GT3     A           4     4 other    teach… home  \n 8 GP     M        15 U       LE3     A           3     2 services other  home  \n 9 GP     M        15 U       GT3     T           3     4 other    other  home  \n10 GP     F        15 U       GT3     T           4     4 teacher  health reput…\n# ℹ 310 more rows\n# ℹ 27 more variables: guardian &lt;chr&gt;, traveltime &lt;dbl&gt;, studytime &lt;dbl&gt;,\n#   failures &lt;dbl&gt;, schoolsup &lt;chr&gt;, famsup &lt;chr&gt;, paid_math &lt;chr&gt;,\n#   activities &lt;chr&gt;, nursery &lt;chr&gt;, higher &lt;chr&gt;, internet &lt;chr&gt;,\n#   romantic &lt;chr&gt;, famrel &lt;dbl&gt;, freetime &lt;dbl&gt;, goout &lt;dbl&gt;, Dalc &lt;dbl&gt;,\n#   Walc &lt;dbl&gt;, health &lt;dbl&gt;, absences_math &lt;dbl&gt;, G1_math &lt;dbl&gt;,\n#   G2_math &lt;dbl&gt;, G3_math &lt;dbl&gt;, paid_port &lt;chr&gt;, absences_port &lt;dbl&gt;, …\n\n\nPrint column names for joined students tibble\n\nprint(colnames(students))\n\n [1] \"school\"        \"sex\"           \"age\"           \"address\"      \n [5] \"famsize\"       \"Pstatus\"       \"Medu\"          \"Fedu\"         \n [9] \"Mjob\"          \"Fjob\"          \"reason\"        \"guardian\"     \n[13] \"traveltime\"    \"studytime\"     \"failures\"      \"schoolsup\"    \n[17] \"famsup\"        \"paid_math\"     \"activities\"    \"nursery\"      \n[21] \"higher\"        \"internet\"      \"romantic\"      \"famrel\"       \n[25] \"freetime\"      \"goout\"         \"Dalc\"          \"Walc\"         \n[29] \"health\"        \"absences_math\" \"G1_math\"       \"G2_math\"      \n[33] \"G3_math\"       \"paid_port\"     \"absences_port\" \"G1_port\"      \n[37] \"G2_port\"       \"G3_port\"      \n\n\n\n\nEstablish Factors\nNext, for the math data, Portuguese data, and combined data, choose at least four categorical variables of interest and convert those into factor variables in each tibble (use the same four variables in each).\nIdentify all potential factor variables. Note: consistent with some social science research practices, variables measured on a Likert scale are treated as interval variables for analysis purposes.\n\nfactors_yn &lt;- c(\"schoolsup\", \"famsup\", \"paid\", \"paid_math\", \"paid_port\", \"activities\", \"nursery\", \"higher\", \"internet\", \"romantic\")\nfactors_ord &lt;- c(\"Medu\", \"Fedu\", \"traveltime\", \"studytime\", \"famsize\")\nfactors_nom &lt;- c(\"school\", \"sex\", \"address\", \"Pstatus\", \"Mjob\", \"Fjob\", \"reason\", \"guardian\")\n\nUse mutate to convert all identified potential factor variables to factors with appropriate options.\n\nstudents &lt;-\n  students |&gt;\n    mutate(across(all_of(factors_ord), ~factor(.x, ordered = T))) |&gt;\n    mutate(across(all_of(factors_nom), as_factor)) |&gt;\n    mutate(famsize = fct_rev(famsize)) |&gt; \n    mutate(across(any_of(factors_yn), as_factor))\n\nstudents_math &lt;-\n  students_math |&gt;\n    mutate(across(all_of(factors_ord), ~factor(.x, ordered = T))) |&gt;\n    mutate(across(all_of(factors_nom), as_factor)) |&gt;\n    mutate(famsize = fct_rev(famsize)) |&gt; \n    mutate(across(any_of(factors_yn), as_factor))\n\nstudents_port &lt;-\n  students_port |&gt;\n    mutate(across(all_of(factors_ord), ~factor(.x, ordered = T))) |&gt;\n    mutate(across(all_of(factors_nom), as_factor)) |&gt;\n    mutate(famsize = fct_rev(famsize)) |&gt; \n    mutate(across(any_of(factors_yn), as_factor))"
  },
  {
    "objectID": "summarizing_student_data.html#task-2-summarize-the-data",
    "href": "summarizing_student_data.html#task-2-summarize-the-data",
    "title": "Summarizing Student Data",
    "section": "Task 2: Summarize the Data",
    "text": "Task 2: Summarize the Data\n\nInspect Data\nLook at how the data is stored and see if everything makes sense.\n\nstr(students)\n\ntibble [320 × 38] (S3: tbl_df/tbl/data.frame)\n $ school       : Factor w/ 2 levels \"GP\",\"MS\": 1 1 1 1 1 1 1 1 1 1 ...\n $ sex          : Factor w/ 2 levels \"F\",\"M\": 1 1 1 1 2 2 1 2 2 1 ...\n $ age          : num [1:320] 18 17 15 16 16 16 17 15 15 15 ...\n $ address      : Factor w/ 2 levels \"U\",\"R\": 1 1 1 1 1 1 1 1 1 1 ...\n $ famsize      : Ord.factor w/ 2 levels \"LE3\"&lt;\"GT3\": 2 2 2 2 1 1 2 1 2 2 ...\n $ Pstatus      : Factor w/ 2 levels \"A\",\"T\": 1 2 2 2 2 2 1 1 2 2 ...\n $ Medu         : Ord.factor w/ 5 levels \"0\"&lt;\"1\"&lt;\"2\"&lt;\"3\"&lt;..: 5 2 5 4 5 3 5 4 4 5 ...\n $ Fedu         : Ord.factor w/ 5 levels \"0\"&lt;\"1\"&lt;\"2\"&lt;\"3\"&lt;..: 5 2 3 4 4 3 5 3 5 5 ...\n $ Mjob         : Factor w/ 5 levels \"at_home\",\"health\",..: 1 1 2 3 4 3 3 4 3 5 ...\n $ Fjob         : Factor w/ 5 levels \"teacher\",\"other\",..: 1 2 3 2 2 2 1 2 2 4 ...\n $ reason       : Factor w/ 4 levels \"course\",\"home\",..: 1 1 2 2 3 2 2 2 2 3 ...\n $ guardian     : Factor w/ 3 levels \"mother\",\"father\",..: 1 2 1 2 1 1 1 1 1 1 ...\n $ traveltime   : Ord.factor w/ 4 levels \"1\"&lt;\"2\"&lt;\"3\"&lt;\"4\": 2 1 1 1 1 1 2 1 1 1 ...\n $ studytime    : Ord.factor w/ 4 levels \"1\"&lt;\"2\"&lt;\"3\"&lt;\"4\": 2 2 3 2 2 2 2 2 2 2 ...\n $ failures     : num [1:320] 0 0 0 0 0 0 0 0 0 0 ...\n $ schoolsup    : Factor w/ 2 levels \"yes\",\"no\": 1 2 2 2 2 2 1 2 2 2 ...\n $ famsup       : Factor w/ 2 levels \"no\",\"yes\": 1 2 2 2 2 1 2 2 2 2 ...\n $ paid_math    : Factor w/ 2 levels \"no\",\"yes\": 1 1 2 2 2 1 1 2 2 2 ...\n $ activities   : Factor w/ 2 levels \"no\",\"yes\": 1 1 2 1 2 1 1 1 2 1 ...\n $ nursery      : Factor w/ 2 levels \"yes\",\"no\": 1 2 1 1 1 1 1 1 1 1 ...\n $ higher       : Factor w/ 2 levels \"yes\",\"no\": 1 1 1 1 1 1 1 1 1 1 ...\n $ internet     : Factor w/ 2 levels \"no\",\"yes\": 1 2 2 1 2 2 1 2 2 2 ...\n $ romantic     : Factor w/ 2 levels \"no\",\"yes\": 1 1 2 1 1 1 1 1 1 1 ...\n $ famrel       : num [1:320] 4 5 3 4 5 4 4 4 5 3 ...\n $ freetime     : num [1:320] 3 3 2 3 4 4 1 2 5 3 ...\n $ goout        : num [1:320] 4 3 2 2 2 4 4 2 1 3 ...\n $ Dalc         : num [1:320] 1 1 1 1 1 1 1 1 1 1 ...\n $ Walc         : num [1:320] 1 1 1 2 2 1 1 1 1 2 ...\n $ health       : num [1:320] 3 3 5 5 5 3 1 1 5 2 ...\n $ absences_math: num [1:320] 6 4 2 4 10 0 6 0 0 0 ...\n $ G1_math      : num [1:320] 5 5 15 6 15 12 6 16 14 10 ...\n $ G2_math      : num [1:320] 6 5 14 10 15 12 5 18 15 8 ...\n $ G3_math      : num [1:320] 6 6 15 10 15 11 6 19 15 9 ...\n $ paid_port    : Factor w/ 2 levels \"no\",\"yes\": 1 1 1 1 1 1 1 1 1 1 ...\n $ absences_port: num [1:320] 4 2 0 0 6 0 2 0 0 2 ...\n $ G1_port      : num [1:320] 0 9 14 11 12 13 10 15 12 14 ...\n $ G2_port      : num [1:320] 11 11 14 13 12 12 13 16 12 14 ...\n $ G3_port      : num [1:320] 11 11 14 13 13 13 13 17 13 14 ...\n\n\nCheck for missing values in students.\n\nstudents |&gt;\n  select(everything()) |&gt;\n  summarize(across(everything(), ~ sum(is.na(.))))\n\n# A tibble: 1 × 38\n  school   sex   age address famsize Pstatus  Medu  Fedu  Mjob  Fjob reason\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;   &lt;int&gt;   &lt;int&gt;   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;  &lt;int&gt;\n1      0     0     0       0       0       0     0     0     0     0      0\n# ℹ 27 more variables: guardian &lt;int&gt;, traveltime &lt;int&gt;, studytime &lt;int&gt;,\n#   failures &lt;int&gt;, schoolsup &lt;int&gt;, famsup &lt;int&gt;, paid_math &lt;int&gt;,\n#   activities &lt;int&gt;, nursery &lt;int&gt;, higher &lt;int&gt;, internet &lt;int&gt;,\n#   romantic &lt;int&gt;, famrel &lt;int&gt;, freetime &lt;int&gt;, goout &lt;int&gt;, Dalc &lt;int&gt;,\n#   Walc &lt;int&gt;, health &lt;int&gt;, absences_math &lt;int&gt;, G1_math &lt;int&gt;,\n#   G2_math &lt;int&gt;, G3_math &lt;int&gt;, paid_port &lt;int&gt;, absences_port &lt;int&gt;,\n#   G1_port &lt;int&gt;, G2_port &lt;int&gt;, G3_port &lt;int&gt;\n\nstudents |&gt;\n  select(where(is.numeric)) |&gt;\n  summarize(across(everything(), ~ sum(is.nan(.))))\n\n# A tibble: 1 × 16\n    age failures famrel freetime goout  Dalc  Walc health absences_math G1_math\n  &lt;int&gt;    &lt;int&gt;  &lt;int&gt;    &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;  &lt;int&gt;         &lt;int&gt;   &lt;int&gt;\n1     0        0      0        0     0     0     0      0             0       0\n# ℹ 6 more variables: G2_math &lt;int&gt;, G3_math &lt;int&gt;, absences_port &lt;int&gt;,\n#   G1_port &lt;int&gt;, G2_port &lt;int&gt;, G3_port &lt;int&gt;\n\nstudents |&gt;\n  select(everything()) |&gt;\n  summarize(across(everything(), ~ sum(. == \"\")))\n\n# A tibble: 1 × 38\n  school   sex   age address famsize Pstatus  Medu  Fedu  Mjob  Fjob reason\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;   &lt;int&gt;   &lt;int&gt;   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;  &lt;int&gt;\n1      0     0     0       0       0       0     0     0     0     0      0\n# ℹ 27 more variables: guardian &lt;int&gt;, traveltime &lt;int&gt;, studytime &lt;int&gt;,\n#   failures &lt;int&gt;, schoolsup &lt;int&gt;, famsup &lt;int&gt;, paid_math &lt;int&gt;,\n#   activities &lt;int&gt;, nursery &lt;int&gt;, higher &lt;int&gt;, internet &lt;int&gt;,\n#   romantic &lt;int&gt;, famrel &lt;int&gt;, freetime &lt;int&gt;, goout &lt;int&gt;, Dalc &lt;int&gt;,\n#   Walc &lt;int&gt;, health &lt;int&gt;, absences_math &lt;int&gt;, G1_math &lt;int&gt;,\n#   G2_math &lt;int&gt;, G3_math &lt;int&gt;, paid_port &lt;int&gt;, absences_port &lt;int&gt;,\n#   G1_port &lt;int&gt;, G2_port &lt;int&gt;, G3_port &lt;int&gt;\n\n\nCheck for missing values in students_math.\n\nstudents_math |&gt;\n  select(everything()) |&gt;\n  summarize(across(everything(), ~ sum(is.na(.))))\n\n# A tibble: 1 × 33\n  school   sex   age address famsize Pstatus  Medu  Fedu  Mjob  Fjob reason\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;   &lt;int&gt;   &lt;int&gt;   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;  &lt;int&gt;\n1      0     0     0       0       0       0     0     0     0     0      0\n# ℹ 22 more variables: guardian &lt;int&gt;, traveltime &lt;int&gt;, studytime &lt;int&gt;,\n#   failures &lt;int&gt;, schoolsup &lt;int&gt;, famsup &lt;int&gt;, paid &lt;int&gt;,\n#   activities &lt;int&gt;, nursery &lt;int&gt;, higher &lt;int&gt;, internet &lt;int&gt;,\n#   romantic &lt;int&gt;, famrel &lt;int&gt;, freetime &lt;int&gt;, goout &lt;int&gt;, Dalc &lt;int&gt;,\n#   Walc &lt;int&gt;, health &lt;int&gt;, absences &lt;int&gt;, G1 &lt;int&gt;, G2 &lt;int&gt;, G3 &lt;int&gt;\n\nstudents_math |&gt;\n  select(where(is.numeric)) |&gt;\n  summarize(across(everything(), ~ sum(is.nan(.))))\n\n# A tibble: 1 × 12\n    age failures famrel freetime goout  Dalc  Walc health absences    G1    G2\n  &lt;int&gt;    &lt;int&gt;  &lt;int&gt;    &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;  &lt;int&gt;    &lt;int&gt; &lt;int&gt; &lt;int&gt;\n1     0        0      0        0     0     0     0      0        0     0     0\n# ℹ 1 more variable: G3 &lt;int&gt;\n\nstudents_math |&gt;\n  select(everything()) |&gt;\n  summarize(across(everything(), ~ sum(. == \"\")))\n\n# A tibble: 1 × 33\n  school   sex   age address famsize Pstatus  Medu  Fedu  Mjob  Fjob reason\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;   &lt;int&gt;   &lt;int&gt;   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;  &lt;int&gt;\n1      0     0     0       0       0       0     0     0     0     0      0\n# ℹ 22 more variables: guardian &lt;int&gt;, traveltime &lt;int&gt;, studytime &lt;int&gt;,\n#   failures &lt;int&gt;, schoolsup &lt;int&gt;, famsup &lt;int&gt;, paid &lt;int&gt;,\n#   activities &lt;int&gt;, nursery &lt;int&gt;, higher &lt;int&gt;, internet &lt;int&gt;,\n#   romantic &lt;int&gt;, famrel &lt;int&gt;, freetime &lt;int&gt;, goout &lt;int&gt;, Dalc &lt;int&gt;,\n#   Walc &lt;int&gt;, health &lt;int&gt;, absences &lt;int&gt;, G1 &lt;int&gt;, G2 &lt;int&gt;, G3 &lt;int&gt;\n\n\nCheck for missing values in students_port.\n\nstudents_port |&gt;\n  select(everything()) |&gt;\n  summarize(across(everything(), ~ sum(is.na(.))))\n\n# A tibble: 1 × 33\n  school   sex   age address famsize Pstatus  Medu  Fedu  Mjob  Fjob reason\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;   &lt;int&gt;   &lt;int&gt;   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;  &lt;int&gt;\n1      0     0     0       0       0       0     0     0     0     0      0\n# ℹ 22 more variables: guardian &lt;int&gt;, traveltime &lt;int&gt;, studytime &lt;int&gt;,\n#   failures &lt;int&gt;, schoolsup &lt;int&gt;, famsup &lt;int&gt;, paid &lt;int&gt;,\n#   activities &lt;int&gt;, nursery &lt;int&gt;, higher &lt;int&gt;, internet &lt;int&gt;,\n#   romantic &lt;int&gt;, famrel &lt;int&gt;, freetime &lt;int&gt;, goout &lt;int&gt;, Dalc &lt;int&gt;,\n#   Walc &lt;int&gt;, health &lt;int&gt;, absences &lt;int&gt;, G1 &lt;int&gt;, G2 &lt;int&gt;, G3 &lt;int&gt;\n\nstudents_port |&gt;\n  select(where(is.numeric)) |&gt;\n  summarize(across(everything(), ~ sum(is.nan(.))))\n\n# A tibble: 1 × 12\n    age failures famrel freetime goout  Dalc  Walc health absences    G1    G2\n  &lt;int&gt;    &lt;int&gt;  &lt;int&gt;    &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;  &lt;int&gt;    &lt;int&gt; &lt;int&gt; &lt;int&gt;\n1     0        0      0        0     0     0     0      0        0     0     0\n# ℹ 1 more variable: G3 &lt;int&gt;\n\nstudents_port |&gt;\n  select(everything()) |&gt;\n  summarize(across(everything(), ~ sum(. == \"\")))\n\n# A tibble: 1 × 33\n  school   sex   age address famsize Pstatus  Medu  Fedu  Mjob  Fjob reason\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;   &lt;int&gt;   &lt;int&gt;   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;  &lt;int&gt;\n1      0     0     0       0       0       0     0     0     0     0      0\n# ℹ 22 more variables: guardian &lt;int&gt;, traveltime &lt;int&gt;, studytime &lt;int&gt;,\n#   failures &lt;int&gt;, schoolsup &lt;int&gt;, famsup &lt;int&gt;, paid &lt;int&gt;,\n#   activities &lt;int&gt;, nursery &lt;int&gt;, higher &lt;int&gt;, internet &lt;int&gt;,\n#   romantic &lt;int&gt;, famrel &lt;int&gt;, freetime &lt;int&gt;, goout &lt;int&gt;, Dalc &lt;int&gt;,\n#   Walc &lt;int&gt;, health &lt;int&gt;, absences &lt;int&gt;, G1 &lt;int&gt;, G2 &lt;int&gt;, G3 &lt;int&gt;\n\n\n\n\nCategorical Variables\nCreate a one-way contingency table, a two-way contingency table, and a three-way contingency table for some of the factor variables created previously. Use table() to accomplish this.\nOne-way contingency table on Father’s education (Fedu):\n\none_way &lt;- table(students$Fedu)\none_way\n\n\n 0  1  2  3  4 \n 2 57 89 84 88 \n\n\nTakeaway: across the students’ data set it looks like the father is approximately equally likely to have a middle-school, high-school, or college education.\nTwo-way contingency table on Mother’s job (Mjob) and Mother’s education (Medu):\n\ntwo_way &lt;- table(students$Mjob, students$Medu)\ntwo_way\n\n          \n            0  1  2  3  4\n  at_home   1 15 19  7  2\n  health    0  1  2  3 24\n  other     1 18 42 34 21\n  services  0  3 21 28 23\n  teacher   0  0  0  2 53\n\n\nTakeaway: across the students’ data set it looks like if the mother is employed in health or teaching, it is more likely she has earned higher education.\nThree-way contigency table on guardian, family size and family support:\n\nthree_way &lt;- table(students$guardian, students$famsize, students$famsup)\nthree_way\n\n, ,  = no\n\n        \n         LE3 GT3\n  mother  24  64\n  father  12  15\n  other    1   1\n\n, ,  = yes\n\n        \n         LE3 GT3\n  mother  42 107\n  father   9  38\n  other    2   5\n\n\nTakeaway: for students where the father is the primary guardian, the presence of family education support seems proportionally greater for larger family sizes.\nConditional three-way contigency table on sex and school for only rural addresses:\n\nthree_way_cond &lt;- table(students$sex, students$school, students$address)\nthree_way_cond[, , \"R\"]\n\n   \n    GP MS\n  F 23 12\n  M 25  7\n\n\nTakeaway: Mousinho da Silveira has a smaller population of rural students than Gabriel Pereira, and, of that population, is more weighted toward female students.\nOne-way contingency table on Father’s education (Fedu) using dplyr:\n\nstudents |&gt;\n  group_by(Fedu) |&gt;\n  summarise(count = n())\n\n# A tibble: 5 × 2\n  Fedu  count\n  &lt;ord&gt; &lt;int&gt;\n1 0         2\n2 1        57\n3 2        89\n4 3        84\n5 4        88\n\n\nTakeaway: across the students’ data set it looks like the father is approximately equally likely to have a middle-school, high-school, or college education.\nTwo-way contingency table on Mother’s job (Mjob) and Mother’s education (Medu) using dplyr:\n\nstudents |&gt;\n  group_by(Mjob, Medu) |&gt;\n  summarise(count = n())\n\n`summarise()` has grouped output by 'Mjob'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 20 × 3\n# Groups:   Mjob [5]\n   Mjob     Medu  count\n   &lt;fct&gt;    &lt;ord&gt; &lt;int&gt;\n 1 at_home  0         1\n 2 at_home  1        15\n 3 at_home  2        19\n 4 at_home  3         7\n 5 at_home  4         2\n 6 health   1         1\n 7 health   2         2\n 8 health   3         3\n 9 health   4        24\n10 other    0         1\n11 other    1        18\n12 other    2        42\n13 other    3        34\n14 other    4        21\n15 services 1         3\n16 services 2        21\n17 services 3        28\n18 services 4        23\n19 teacher  3         2\n20 teacher  4        53\n\n\nTwo-way contingency table on Mother’s job (Mjob) and Mother’s education (Medu) using dplyr. Using pivot_wider() to make the result look more like the output from table():\n\nstudents |&gt;\n  group_by(Mjob, Medu) |&gt;\n  summarise(count = n()) |&gt;\n  pivot_wider(names_from = Medu, values_from = count)\n\n`summarise()` has grouped output by 'Mjob'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 5 × 6\n# Groups:   Mjob [5]\n  Mjob       `0`   `1`   `2`   `3`   `4`\n  &lt;fct&gt;    &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;\n1 at_home      1    15    19     7     2\n2 health      NA     1     2     3    24\n3 other        1    18    42    34    21\n4 services    NA     3    21    28    23\n5 teacher     NA    NA    NA     2    53\n\n\nTakeaway: across the students’ data set it looks like if the mother is employed in health or teaching, it is more likely she has earned higher education.\nCreate a stacked bar graph. Give relevant x and y labels, and a title for the plot:\n\nstudents |&gt;\n  ggplot(aes(x = sex, fill = activities)) +\n  geom_bar() +\n  xlab(\"Sex\") +\n  ylab(\"Count\") +\n  labs(fill = \"Activities\") +\n  ggtitle(\"Participation in Activities by Sex\") +\n  scale_fill_brewer(palette=\"Set1\")\n\n\n\n\n\n\n\n\nTakeaway: males have both a higher absolute and relative participation in extra-curricular activities.\nCreate a side-by-side bar graph. Give relevant x and y labels, and a title for the plot:\n\nstudents |&gt;\n  ggplot(aes(x = sex, fill = romantic)) +\n  geom_bar(position = \"dodge\") +\n  xlab(\"Sex\") +\n  ylab(\"Count\") +\n  labs(fill = \"Relationship\") +\n  ggtitle(\"Romantic Relationships by Sex\") +\n  scale_fill_brewer(palette=\"Set1\")\n\n\n\n\n\n\n\n\nTakeaway: female students tend not to be in a romantic relationship at about a 2:1 ratio; for males the ratio of not-to-in is slightly higher.\n\n\nNumeric Variables\nFind measures of center and spread for the numeric variables absences and G3 for both math and Portguese.\n\nstudents |&gt;\n  summarise(across(c(absences_math, G3_math, absences_port, G3_port),\n                   list(\"mean\" = mean, \"median\" = median, \"stdev\" = sd, \"IQR\" = IQR),\n                   .names = \"{.fn}_{.col}\")) |&gt;\n  round(2) |&gt;\n  t()\n\n                      [,1]\nmean_absences_math    5.41\nmedian_absences_math  4.00\nstdev_absences_math   7.84\nIQR_absences_math     7.25\nmean_G3_math         11.04\nmedian_G3_math       11.00\nstdev_G3_math         4.30\nIQR_G3_math           5.00\nmean_absences_port    3.25\nmedian_absences_port  2.00\nstdev_absences_port   4.56\nIQR_absences_port     4.00\nmean_G3_port         12.88\nmedian_G3_port       13.00\nstdev_G3_port         2.89\nIQR_G3_port           4.00\n\n\nTakeaway: absences show both a higher center and greater spread for math than for Portuguese; average math G3 scores are a bit lower than Portuguese, perhaps related to greater absences.\nRepeat the above analysis while subsetting the data in a meaningful way, in this case on commute time greater than 30 minutes.\n\nstudents |&gt;\n  filter(traveltime &gt;= 3) |&gt;\n  summarise(across(c(absences_math, G3_math, absences_port, G3_port),\n                   list(\"mean\" = mean, \"median\" = median, \"stdev\" = sd, \"IQR\" = IQR),\n                   .names = \"{.fn}_{.col}\")) |&gt;\n  round(2) |&gt;\n  t()\n\n                      [,1]\nmean_absences_math    4.83\nmedian_absences_math  4.00\nstdev_absences_math   4.82\nIQR_absences_math     4.25\nmean_G3_math          9.25\nmedian_G3_math       10.00\nstdev_G3_math         4.91\nIQR_G3_math           4.00\nmean_absences_port    3.92\nmedian_absences_port  2.50\nstdev_absences_port   4.10\nIQR_absences_port     2.50\nmean_G3_port         11.42\nmedian_G3_port       11.00\nstdev_G3_port         3.15\nIQR_G3_port           3.00\n\n\nTakeaway: there looks to be less variability in adsences for math compared to the full sample; average G3 scores are somewhat lower for both math and Portuguese compared to the full sample.\nFind measures of center and spread for the numeric variables G1 and G3 for both math and Portuguese across a single grouping variable, in this case whether the student had extra educational support from the school.\n\nstudents |&gt;\n  group_by(schoolsup) |&gt;\n  summarise(across(c(G1_math, G3_math, G1_port, G3_port),\n                   list(\"mean\" = mean, \"median\" = median, \"stdev\" = sd, \"IQR\" = IQR),\n                   .names = \"{.fn}_{.col}\")) |&gt;\n  mutate(across(where(is.numeric), round, 2))\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `across(where(is.numeric), round, 2)`.\nCaused by warning:\n! The `...` argument of `across()` is deprecated as of dplyr 1.1.0.\nSupply arguments directly to `.fns` through an anonymous function instead.\n\n  # Previously\n  across(a:b, mean, na.rm = TRUE)\n\n  # Now\n  across(a:b, \\(x) mean(x, na.rm = TRUE))\n\n\n# A tibble: 2 × 17\n  schoolsup mean_G1_math median_G1_math stdev_G1_math IQR_G1_math mean_G3_math\n  &lt;fct&gt;            &lt;dbl&gt;          &lt;dbl&gt;         &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;\n1 yes               9.37             10          2.26           3         9.58\n2 no               11.6              11          3.23           5        11.3 \n# ℹ 11 more variables: median_G3_math &lt;dbl&gt;, stdev_G3_math &lt;dbl&gt;,\n#   IQR_G3_math &lt;dbl&gt;, mean_G1_port &lt;dbl&gt;, median_G1_port &lt;dbl&gt;,\n#   stdev_G1_port &lt;dbl&gt;, IQR_G1_port &lt;dbl&gt;, mean_G3_port &lt;dbl&gt;,\n#   median_G3_port &lt;dbl&gt;, stdev_G3_port &lt;dbl&gt;, IQR_G3_port &lt;dbl&gt;\n\n\nTakeaway: students with extra educational support showed a modest increase from G1 scores to G3 scores; the same was true for Portuguese, although the students wihtout extra support also raised their scores.\nFind measures of center and spread for the numeric variables G1 and G3 for both math and Portuguese across two grouping variable, in this case whether the student had extra paid classes in either or both subjects.\n\nstudents |&gt;\n  group_by(paid_math, paid_port) |&gt;\n  summarise(across(c(G1_math, G3_math, G1_port, G3_port),\n                   list(\"mean\" = mean, \"median\" = median, \"stdev\" = sd, \"IQR\" = IQR),\n                   .names = \"{.fn}_{.col}\")) |&gt;\n  mutate(across(where(is.numeric), round, 2))\n\n`summarise()` has grouped output by 'paid_math'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 4 × 18\n# Groups:   paid_math [2]\n  paid_math paid_port mean_G1_math median_G1_math stdev_G1_math IQR_G1_math\n  &lt;fct&gt;     &lt;fct&gt;            &lt;dbl&gt;          &lt;dbl&gt;         &lt;dbl&gt;       &lt;dbl&gt;\n1 no        no                11.4             11          3.5          6  \n2 no        yes               10.8             11          2.54         2  \n3 yes       no                11.3             11          2.98         5  \n4 yes       yes               10.2             10          2.36         2.5\n# ℹ 12 more variables: mean_G3_math &lt;dbl&gt;, median_G3_math &lt;dbl&gt;,\n#   stdev_G3_math &lt;dbl&gt;, IQR_G3_math &lt;dbl&gt;, mean_G1_port &lt;dbl&gt;,\n#   median_G1_port &lt;dbl&gt;, stdev_G1_port &lt;dbl&gt;, IQR_G1_port &lt;dbl&gt;,\n#   mean_G3_port &lt;dbl&gt;, median_G3_port &lt;dbl&gt;, stdev_G3_port &lt;dbl&gt;,\n#   IQR_G3_port &lt;dbl&gt;\n\n\nTakeaway: …\nCreate a correlation matrix between all of the numeric variables.\n\nstudents |&gt;\n  select(starts_with(c(\"age\", \"absences\", \"G1\", \"G2\", \"G3\"))) |&gt;\n  cor() |&gt;\n  round(2)\n\n                age absences_math absences_port G1_math G1_port G2_math G2_port\nage            1.00          0.14          0.05   -0.11   -0.05   -0.19    0.03\nabsences_math  0.14          1.00          0.56   -0.07   -0.09   -0.08   -0.15\nabsences_port  0.05          0.56          1.00   -0.09   -0.10   -0.13   -0.12\nG1_math       -0.11         -0.07         -0.09    1.00    0.59    0.87    0.60\nG1_port       -0.05         -0.09         -0.10    0.59    1.00    0.54    0.88\nG2_math       -0.19         -0.08         -0.13    0.87    0.54    1.00    0.57\nG2_port        0.03         -0.15         -0.12    0.60    0.88    0.57    1.00\nG3_math       -0.21         -0.03         -0.12    0.82    0.52    0.91    0.55\nG3_port       -0.01         -0.14         -0.07    0.54    0.83    0.50    0.89\n              G3_math G3_port\nage             -0.21   -0.01\nabsences_math   -0.03   -0.14\nabsences_port   -0.12   -0.07\nG1_math          0.82    0.54\nG1_port          0.52    0.83\nG2_math          0.91    0.50\nG2_port          0.55    0.89\nG3_math          1.00    0.48\nG3_port          0.48    1.00\n\n\nTakeaway: …\nCreate a histogram for two of the numeric variables across one of the categorical variables (that is, create graphs that can compare the distributions across the groups on the same plot (no faceting here)). Add appropriate labels and titles.\n\nstudents |&gt;\n  ggplot(aes(G3_math)) +\n  geom_histogram(alpha = 0.5, aes(fill = internet), bins = 10) +\n  scale_fill_brewer(palette=\"Paired\")\n\n\n\n\n\n\n\n\nTakeaway: …\nCreate a kernel density plotfor two of the numeric variables across one of the categorical variables (that is, create graphs that can compare the distributions across the groups on the same plot (no faceting here)). Add appropriate labels and titles.\n\nstudents |&gt;\n  ggplot(aes(G3_math)) +\n  geom_density(alpha = 0.5, aes(fill = internet)) +\n  scale_fill_brewer(palette=\"Paired\")\n\n\n\n\n\n\n\n\nTakeaway: …\nCreate a boxplot for two of the numeric variables across one of the categorical variables (that is, create graphs that can compare the distributions across the groups on the same plot (no faceting here)). Add appropriate labels and titles.\n\nstudents |&gt;\n  ggplot(aes(G3_math)) +\n  geom_boxplot(aes(fill = internet)) +\n  coord_flip() +\n  scale_fill_brewer(palette=\"Paired\")\n\n\n\n\n\n\n\n\nTakeaway: …\nCreate two scatterplots relating a G3 variable to other numeric variables (put G3 on the y-axis). You should jitter the points if they sit on top of each other. Color the points by a categorical variable in each. Add appropriate labels and titles.\n\nstudents |&gt;\n  ggplot(aes(G1_math, G3_math, color = paid_math)) +\n  geom_point() +\n  scale_color_brewer(palette = \"Set1\") +\n  geom_smooth(method = lm)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nTakeaway: …\nCreate two scatterplots relating a G3 variable to other numeric variables (put G3 on the y-axis). You should jitter the points if they sit on top of each other. Color the points by a categorical variable in each. Add appropriate labels and titles.\n\nstudents |&gt;\n  ggplot(aes(G3_port, G3_math, color = schoolsup)) +\n  geom_point() +\n  scale_color_brewer(palette = \"Set1\") +\n  geom_smooth(method = lm)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nTakeaway: …\nRepeat the scatter plot step but use faceting to obtain graphs at each setting of another categorical variable.\n\nstudents |&gt;\n  ggplot(aes(G1_math, G3_math, color = paid_math)) +\n  geom_point() +\n  scale_color_brewer(palette = \"Set1\") +\n  geom_smooth(method = lm) +\n  facet_wrap(~ studytime)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nTakeaway: …\nRepeat the scatter plot step but use faceting to obtain graphs at each setting of another categorical variable.\n\nstudents |&gt;\n  ggplot(aes(G3_port, G3_math, color = schoolsup)) +\n  geom_point() +\n  scale_color_brewer(palette = \"Set1\") +\n  geom_smooth(method = lm) +\n  facet_wrap(~ studytime)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nTakeaway: …\nRepeat the scatter plot step but use faceting to obtain graphs at each combination of two categorical variables.\n\nstudents |&gt;\n  ggplot(aes(G1_math, G3_math, color = paid_math)) +\n  geom_point() +\n  scale_color_brewer(palette = \"Set1\") +\n  geom_smooth(method = lm) +\n  facet_wrap(romantic ~ activities)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nTakeaway: …\nRepeat the scatter plot step but use faceting to obtain graphs at each combination of two categorical variables.\n\nstudents |&gt;\n  ggplot(aes(G3_port, G3_math, color = schoolsup)) +\n  geom_point() +\n  scale_color_brewer(palette = \"Set1\") +\n  geom_smooth(method = lm) +\n  facet_wrap(romantic ~ activities)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\n\nTakeaway: …"
  }
]
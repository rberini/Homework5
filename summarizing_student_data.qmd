---
title: "Summarizing Student Data"
author: "Robert Berini"
format: html
editor: visual
---

## Load Required Packages

```{r message=FALSE, warning=FALSE}
library(conflicted)
library(tidyverse)
conflicts_prefer(dplyr::filter())
```

## Task 1: Read in Data and Modify

### Merge Version

First, modify the code provided with the download to read in the data from a local file source (the downloaded `.csv` files) and combine the two data frames. Use local paths.

```{r}
d1 <- read.table("student-mat.csv",sep=";",header=TRUE)
d2 <- read.table("student-por.csv",sep=";",header=TRUE)

d3 <- merge(d1,d2,by=c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet"))
print(nrow(d3)) # 382 students
```

### Inner Join Version 1

Second, read in and combine the data using functions from the tidyverse. Use an `inner_join()` on the variables used in the **UCI** code. Make a note of any issues.
```{r}
#| error: TRUE

d_one <- read_delim("student-mat.csv", delim = ";")
d_two <- read_delim("student-por.csv", delim = ";")

d_three <- inner_join(d_one, d_two, by =
                         c("school",
                           "sex",
                           "age",
                           "address",
                           "famsize",
                           "Pstatus",
                           "Medu",
                           "Fedu",
                           "Mjob",
                           "Fjob",
                           "reason",
                           "nursery",
                           "internet")
                      )
d_three
```

*Issue noted: the above join code creates duplicate x and y versions of several variables where the values are the same.*

### Inner Join Version 2

Use an `inner_join()` on all variables other than `G1`, `G2`, `G3`, `paid`, and `absences`. Use this form of the combined data in further exercises.
```{r}
students_math <- read_delim("student-mat.csv", delim = ";")
students_port <- read_delim("student-por.csv", delim = ";")

exclude_cols <- c("G1", "G2", "G3", "paid", "absences")

students <- inner_join(students_math,
                       students_port,
                       by = colnames(students_math)[! colnames(students_math)%in% exclude_cols],
                       suffix = c("_math", "_port")
                       )
students
```

Print column names for joined `students` tibble
```{r}
print(colnames(students))
```

### Establish Factors

Next, for the math data, Portuguese data, and combined data, choose at least four categorical variables of interest and convert those into factor variables in each tibble (use the same four variables in each).

Identify all potential factor variables. *Note: consistent with some social science research practices, variables measured on a Likert scale (e.g., `health`) are treated as interval variables for analysis purposes.*
```{r}
factors_yn <- c("schoolsup", "famsup", "paid", "paid_math", "paid_port", "activities", "nursery", "higher", "internet", "romantic")
factors_ord <- c("Medu", "Fedu", "traveltime", "studytime", "famsize")
factors_nom <- c("school", "sex", "address", "Pstatus", "Mjob", "Fjob", "reason", "guardian")
```

```{r}
#| echo: false
#| eval: false

factorize <- function (df) {
  df <-
    df |>
      mutate(across(all_of(factors_ord), ~factor(.x, ordered = T))) |>
      mutate(across(all_of(factors_nom), as_factor)) |>
      mutate(famsize = fct_rev(famsize)) |> 
      mutate(across(any_of(factors_yn), as_factor))
  #assign({{ df}}, df, envir = .GlobalEnv)
}
```

```{r}
#| eval: false
#| echo: false

#ignoring this code block because cannot figure out how to get function to overwrite dataframe
lapply(list(students, students_math, students_port), factorize)
students

```

Use `mutate` to convert all identified binary, nominal, and ordinal variables to factors with appropriate levels.
```{r}
students <-
  students |>
    mutate(across(all_of(factors_ord), ~factor(.x, ordered = T))) |>
    mutate(across(all_of(factors_nom), as_factor)) |>
    mutate(famsize = fct_rev(famsize)) |> 
    mutate(across(any_of(factors_yn), as_factor))

students_math <-
  students_math |>
    mutate(across(all_of(factors_ord), ~factor(.x, ordered = T))) |>
    mutate(across(all_of(factors_nom), as_factor)) |>
    mutate(famsize = fct_rev(famsize)) |> 
    mutate(across(any_of(factors_yn), as_factor))

students_port <-
  students_port |>
    mutate(across(all_of(factors_ord), ~factor(.x, ordered = T))) |>
    mutate(across(all_of(factors_nom), as_factor)) |>
    mutate(famsize = fct_rev(famsize)) |> 
    mutate(across(any_of(factors_yn), as_factor))
```

## Task 2: Summarize the Data

### Inspect Data

Look at how the data is stored and see if everything makes sense.
```{r}
str(students)
```

Check for missing values in `students`.
```{r}
students |>
  select(everything()) |>
  summarize(across(everything(), ~ sum(is.na(.))))

students |>
  select(where(is.numeric)) |>
  summarize(across(everything(), ~ sum(is.nan(.))))

students |>
  select(everything()) |>
  summarize(across(everything(), ~ sum(. == "")))
```

Check for missing values in `students_math`.
```{r}
students_math |>
  select(everything()) |>
  summarize(across(everything(), ~ sum(is.na(.))))

students_math |>
  select(where(is.numeric)) |>
  summarize(across(everything(), ~ sum(is.nan(.))))

students_math |>
  select(everything()) |>
  summarize(across(everything(), ~ sum(. == "")))
```

Check for missing values in `students_port`.
```{r}
students_port |>
  select(everything()) |>
  summarize(across(everything(), ~ sum(is.na(.))))

students_port |>
  select(where(is.numeric)) |>
  summarize(across(everything(), ~ sum(is.nan(.))))

students_port |>
  select(everything()) |>
  summarize(across(everything(), ~ sum(. == "")))
```

### Categorical Variables

Create a one-way contingency table, a two-way contingency table, and a three-way contingency table for some of the factor variables created previously. Use `table()` to accomplish this.

One-way contingency table on Father's education (`Fedu`):
```{r}
one_way <- table(students$Fedu)
one_way
```
*Takeaway: across the students' data set it looks like the father is approximately equally likely to have a middle-school, high-school, or college education.*

Two-way contingency table on Mother's job (`Mjob`) and Mother's education (`Medu`):
```{r}
two_way <- table(students$Mjob, students$Medu)
two_way
```
*Takeaway: across the students' data set it looks like if the mother is employed in health or teaching, it is more likely she has earned higher education.*

Three-way contigency table on guardian, family size and family support:
```{r}
three_way <- table(students$guardian, students$famsize, students$famsup)
three_way
```
*Takeaway: for students where the father is the primary guardian, the presence of family education support seems proportionally greater for larger family sizes.*

Conditional three-way contigency table on sex and school for only rural addresses:
```{r}
three_way_cond <- table(students$sex, students$school, students$address)
three_way_cond[, , "R"]
```
*Takeaway: Mousinho da Silveira has a smaller population of rural students than Gabriel Pereira, and, of that population, is more weighted toward female students.*

One-way contingency table on Father's education (`Fedu`) using `dplyr`:
```{r}
students |>
  group_by(Fedu) |>
  summarise(count = n())
```
*Takeaway: across the students' data set it looks like the father is approximately equally likely to have a middle-school, high-school, or college education.*

Two-way contingency table on Mother's job (`Mjob`) and Mother's education (`Medu`) using `dplyr`:
```{r}
students |>
  group_by(Mjob, Medu) |>
  summarise(count = n())
```

Two-way contingency table on Mother's job (`Mjob`) and Mother's education (`Medu`) using `dplyr`. Using `pivot_wider()` to make the result look more like the output from `table()`:
```{r}
students |>
  group_by(Mjob, Medu) |>
  summarise(count = n()) |>
  pivot_wider(names_from = Medu, values_from = count)
```
*Takeaway: across the students' data set it looks like if the mother is employed in health or teaching, it is more likely she has earned higher education.*

Create a stacked bar graph. Give relevant x and y labels, and a title for the plot:
```{r}
students |>
  ggplot(aes(x = sex, fill = activities)) +
  geom_bar() +
  xlab("Sex") +
  ylab("Count") +
  labs(fill = "Activities") +
  ggtitle("Participation in Activities by Sex") +
  scale_fill_brewer(palette="Set1")
```
*Takeaway: males have both a higher absolute and relative participation in extra-curricular activities.*

Create a side-by-side bar graph. Give relevant x and y labels, and a title for the plot:
```{r}
students |>
  ggplot(aes(x = sex, fill = romantic)) +
  geom_bar(position = "dodge") +
  xlab("Sex") +
  ylab("Count") +
  labs(fill = "Relationship") +
  ggtitle("Romantic Relationships by Sex") +
  scale_fill_brewer(palette="Set1")
```
*Takeaway: female students tend not to be in a romantic relationship at about a 2:1 ratio; for males the ratio of not:in is slightly higher.*

### Numeric Variables

Find measures of center and spread for the numeric variables `absences` and `G3` for both math and Portguese.
```{r}
students |>
  summarise(across(c(absences_math, G3_math, absences_port, G3_port),
                   list("mean" = mean, "median" = median, "stdev" = sd, "IQR" = IQR),
                   .names = "{.fn}_{.col}")) |>
  round(2) |>
  t()
```
*Takeaway: absences show both a higher center and greater spread for math than for Portuguese; average math G3 scores are a bit lower than Portuguese, perhaps related to greater absences.*

Repeat the above analysis while subsetting the data in a meaningful way, in this case on commute time greater than 30 minutes.
```{r}
students |>
  filter(traveltime >= 3) |>
  summarise(across(c(absences_math, G3_math, absences_port, G3_port),
                   list("mean" = mean, "median" = median, "stdev" = sd, "IQR" = IQR),
                   .names = "{.fn}_{.col}")) |>
  round(2) |>
  t()
```
*Takeaway: there looks to be less variability in adsences for math compared to the full sample; average G3 scores are somewhat lower for both math and Portuguese compared to the full sample.*

Find measures of center and spread for the numeric variables `G1` and `G3` for both math and Portuguese across a single grouping variable, in this case whether the student had extra educational support from the school.
```{r}
students |>
  group_by(schoolsup) |>
  summarise(across(c(G1_math, G3_math, G1_port, G3_port),
                   list("mean" = mean, "median" = median, "stdev" = sd, "IQR" = IQR),
                   .names = "{.fn}_{.col}")) |>
  mutate(across(where(is.numeric), round, 2))
```
*Takeaway: students with extra educational support showed a modest increase from G1 scores to G3 scores; the same was true for Portuguese, although the students wihtout extra support also raised their scores.*

Find measures of center and spread for the numeric variables `G1` and `G3` for both math and Portuguese across two grouping variable, in this case whether the student had extra paid classes in either or both subjects.
```{r}
students |>
  group_by(paid_math, paid_port) |>
  summarise(across(c(G1_math, G3_math, G1_port, G3_port),
                   list("mean" = mean, "median" = median, "stdev" = sd, "IQR" = IQR),
                   .names = "{.fn}_{.col}")) |>
  mutate(across(where(is.numeric), round, 2))
```
*Takeaway: students with paid extra classes in both math and Portuguese (i.e., yes - yes) actually show the lower mean scores across all four variables; students without paid extra classes (i.e., no - no) show the highest interquartile range across all four variables.*

Create a correlation matrix between all of the numeric variables.
```{r}
students |>
  select(starts_with(c("age", "absences", "G1", "G2", "G3"))) |>
  cor() |>
  round(2)
```
*Takeaway: both age and the two absence variables show fairly weak correlation with the score variables; perhaps unsurprisingly, the scoring variables show medium to strong correlation with one another.*

Create a histogram for Final Math Score (`G3_math`) across one of the categorical variables, in this case Internet Access (`internet`).
```{r}
students |>
  ggplot(aes(G3_math)) +
  geom_histogram(alpha = 0.5, aes(fill = internet), bins = 10) +
  xlab("Final Math Score") +
  ylab("Count") +
  labs(title = "Final Math Score Distribution",
       subtitle = "Considering Effects of Internet Access", fill = "Internet Access") +
  scale_fill_brewer(palette="Paired")
```
*Takeaway: ...*

Create a histogram for Final Portuguese Score (`G3_port`) across one of the categorical variables, in this case Internet Access (`internet`).
```{r}
students |>
  ggplot(aes(G3_port)) +
  geom_histogram(alpha = 0.5, aes(fill = internet), bins = 10) +
  xlab("Final Portuguese Score") +
  ylab("Count") +
  labs(title = "Final Portuguese Score Distribution",
       subtitle = "Considering Effects of Internet Access", fill = "Internet Access") +
  scale_fill_brewer(palette="Paired")
```
*Takeaway: ...*

Create a kernel density plot for Final Math Score (`G3_math`) across one of the categorical variables, in this case Internet Access (`internet`).
```{r}
students |>
  ggplot(aes(G3_math)) +
  geom_density(alpha = 0.5, aes(fill = internet)) +
  xlab("Final Math Score") +
  ylab("Count") +
  labs(title = "Final Math Score Distribution",
       subtitle = "Considering Effects of Internet Access", fill = "Internet Access") +
  scale_fill_brewer(palette="Paired")
```
*Takeaway: ...*

Create a kernel density plot for Final Portuguese Score (`G3_port`) across one of the categorical variables, in this case Internet Access (`internet`).
```{r}
students |>
  ggplot(aes(G3_port)) +
  geom_density(alpha = 0.5, aes(fill = internet)) +
  xlab("Final Portuguese Score") +
  ylab("Count") +
  labs(title = "Final Portuguese Score Distribution",
       subtitle = "Considering Effects of Internet Access", fill = "Internet Access") +
  scale_fill_brewer(palette="Paired")
```
*Takeaway: ...*

Create a box plot for Final Math Score (`G3_math`) across one of the categorical variables, in this case Internet Access (`internet`).
```{r}
students |>
  ggplot(aes(G3_math, internet)) +
  geom_boxplot(aes(fill = internet)) +
  coord_flip() +
  xlab("Final Math Score") +
  ylab("Internet Access") +
  labs(title = "Final Math Score Distribution",
       subtitle = "Considering Effects of Internet Access", fill = "Internet Access") +
  theme(legend.position = "none") +
  scale_fill_brewer(palette="Paired")
```
*Takeaway: ...*

Create a box plot for Final Portuguese Score (`G3_port`) across one of the categorical variables, in this case Internet Access (`internet`).
```{r}
students |>
  ggplot(aes(G3_port, internet)) +
  geom_boxplot(aes(fill = internet)) +
  coord_flip() +
  xlab("Final Portuguese Score") +
  ylab("Internet Access") +
  labs(title = "Final Portuguese Score Distribution",
       subtitle = "Considering Effects of Internet Access", fill = "Internet Access") +
  theme(legend.position = "none") +
  scale_fill_brewer(palette="Paired")
```
*Takeaway: ...*


Create a scatterplot relating a `G3` variable, in this case `G3_math` to other numeric variables, in this case `G1_math`. Color the points by a categorical variable, in this case `path_math`.
```{r}
students |>
  ggplot(aes(G1_math, G3_math, color = paid_math)) +
  geom_point() +
  scale_color_brewer(palette = "Set1") +
  geom_smooth(method = lm) +
  xlab("First Period Math Grade") +
  ylab("Final Math Grade") +
  labs(title = "Relationship between First Period Grade and Final Grade",
       subtitle = "Considering Effects of Paid Extra Class")
```
*Takeaway: ...*

Create a scatterplot relating a `G3` variable, in this case `G3_math` to other numeric variables, in this case `G3_port`. Color the points by a categorical variable, in this case `schoolsup`.
```{r}
students |>
  ggplot(aes(G3_port, G3_math, color = schoolsup)) +
  geom_point() +
  scale_color_brewer(palette = "Set1") +
  geom_smooth(method = lm) +
  xlab("Final Portuguese Grade") +
  ylab("Final Math Grade") +
  labs(title = "Relationship between Final Portuguese and Math Grades",
       subtitle = "Considering Effects of Extra Educational Support")
```
*Takeaway: ...*

Repeat the scatter plot step but use faceting to obtain graphs at each setting of another categorical variable.
```{r}
students |>
  ggplot(aes(G1_math, G3_math, color = paid_math)) +
  geom_point() +
  scale_color_brewer(palette = "Set1") +
  geom_smooth(method = lm) +
  facet_wrap(~ studytime)
```
*Takeaway: ...*

Repeat the scatter plot step but use faceting to obtain graphs at each setting of another categorical variable.
```{r}
students |>
  ggplot(aes(G3_port, G3_math, color = schoolsup)) +
  geom_point() +
  scale_color_brewer(palette = "Set1") +
  geom_smooth(method = lm) +
  facet_wrap(~ studytime)
```
*Takeaway: ...*

Repeat the scatter plot step but use faceting to obtain graphs at each combination of two categorical variables.
```{r}
students |>
  ggplot(aes(G1_math, G3_math, color = paid_math)) +
  geom_point() +
  scale_color_brewer(palette = "Set1") +
  geom_smooth(method = lm) +
  facet_wrap(romantic ~ activities)
```
*Takeaway: ...*

Repeat the scatter plot step but use faceting to obtain graphs at each combination of two categorical variables.
```{r}
students |>
  ggplot(aes(G3_port, G3_math, color = schoolsup)) +
  geom_point() +
  scale_color_brewer(palette = "Set1") +
  geom_smooth(method = lm) +
  facet_wrap(romantic ~ activities)
```
*Takeaway: ...*